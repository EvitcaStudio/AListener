/**
 * pulse@1.0.0 https://github.com/EvitcaStudio/Pulse
 * Compiled 1/9/2024, 7:00:35 AM UTC
 * 
 * pulse is licensed under a MIT styled License. See LICENSE.md for more info.
 * 
 * Copyright 2024, Evitca Studio, All Rights Reserved
 */
 var t={d:(e,s)=>{for(var r in s)t.o(s,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:s[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},e={};t.d(e,{G:()=>i});class s{constructor(e){this.RESET="[0m",this.BRIGHT="[1m",this.DIM="[2m",this.UNDERSCORE="[4m",this.BLINK="[5m",this.REVERSE="[7m",this.HIDDEN="[8m",this.FG_BLACK="[30m",this.FG_RED="[31m",this.FG_GREEN="[32m",this.FG_YELLOW="[33m",this.FG_BLUE="[34m",this.FG_MAGENTA="[35m",this.FG_CYAN="[36m",this.FG_WHITE="[37m",this.FG_GRAY="[90m",this.BG_BLACK="[40m",this.BG_RED="[41m",this.BG_GREEN="[42m",this.BG_YELLOW="[43m",this.BG_BLUE="[44m",this.BG_MAGENTA="[45m",this.BG_CYAN="[46m",this.BG_WHITE="[47m",this.BG_GRAY="[100m",this.TYPE_SPACER_LENGTH=13,this.types={default:this.FG_WHITE},this.currentType="",this.SPACE_CHAR=" ",this.FG_COLORS={};for(let e=0;e<=255;e++)this.FG_COLORS[e]="[38;5;"+e+"m";this.BG_COLORS={};for(let e=0;e<=255;e++)this.BG_COLORS[e]="[48;5;"+e+"m";Array.isArray(e)&&this.registerTypes(e)}prefix(e){return"string"==typeof e&&(this.currentType=e),this}message(t="log",...s){var r=this.currentType||"";if(0===r.length)console[t](...s);else{var i=r.length>=this.TYPE_SPACER_LENGTH;let e=this.types[r.toLowerCase()]?this.types[r.toLowerCase()]:this.types.default;var o=e.includes("");o||(e="color: "+e),!globalThis.window||o?console[t](e+r+this.SPACE_CHAR.repeat(Math.max(this.TYPE_SPACER_LENGTH-r.length,i?1:0))+"|"+this.RESET,...s):console[t]("%c"+r+this.SPACE_CHAR.repeat(Math.max(this.TYPE_SPACER_LENGTH-r.length,i?1:0))+"|",e,...s)}this.currentType=""}log(...e){this.message("log",...e)}info(...e){this.message("info",...e)}error(...e){this.message("error",...e)}warn(...e){this.message("warn",...e)}assert(...e){console.assert(...e)}debug(...e){this.message("debug",...e)}count(e){console.count(e)}countReset(e){console.countReset(e)}table(e,t){console.table(e,t)}time(e){this.message("time",e)}timeLog(e){this.message("timeLog",e)}timeEnd(e){this.message("timeEnd",e)}trace(...e){this.message("trace",...e)}group(e){this.message("group",e)}groupCollapsed(e){console.groupCollapsed(e)}groupEnd(){console.groupEnd()}clear(){console.clear()}registerType(e,t){this.types[e]||"string"==typeof e&&"string"==typeof t&&(this.types[e.toLowerCase()]=t)}registerTypes(t){if(Array.isArray(t))for(let e=0;e<t.length;e++)this.registerType(t[e].type,t[e].ansi)}unregisterType(e){this.types[e]&&delete this.types[e]}}class r{static tracker={ids:[]};static storedIDs=[];instanceWeakMap=new WeakMap;version="1.0.0";constructor(){this.logger=new s,this.logger.registerType("PulseComponent-Module","#ff6600")}generateID(s=7){function e(){let t="";for(let e=0;e<s;e++)t+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random()));return t}let t=e();for(;r.storedIDs.includes(t);)t=e();return r.storedIDs.push(t),t}on(t,s,i){if("function"!=typeof i)this.logger.prefix("PulseComponent-Module").error("pFunction argument is missing or it is not of the function type!");else{let e=this.instanceWeakMap.get(t);e||(e=this.generateID(),this.instanceWeakMap.set(t,e),r.tracker.ids.push(e),r.tracker[e]={},r.tracker[e].listened={}),r.tracker[e][s]||(r.tracker[e][s]={counter:0});var o=++r.tracker[e][s].counter;r.tracker[e].listened[s]||this.listenForEvent(t,s),r.tracker[e][s][o]=i,"onNew"===s&&r.tracker[e][s][o].bind(t)()}}off(e,t,s){if("function"!=typeof s)this.logger.prefix("PulseComponent-Module").error("pFunction argument is missing or it is not of the function type!");else{var i=this.instanceWeakMap.get(e);if(i){for(const e in r.tracker[i][t])if(r.tracker[i][t][e]===s)return void delete r.tracker[i][t][e];this.logger.prefix("PulseComponent-Module").error("This function is not being tracked.")}}}listenForEvent(e,t){let s=e[t];const i=this.instanceWeakMap.get(e);e[t]=function(){"function"==typeof s&&s.apply(e,arguments);for(const s in r.tracker[i][t])"function"==typeof r.tracker[i][t][s]&&r.tracker[i][t][s].apply(e,arguments)},r.tracker[i].listened[t]=!0}}const i=new r;var o=e.G;export{o as Pulse};